version: '3'
services:
  postgres_db:
    image: postgres
    hostname: postgres_db
    restart: always
    container_name: postgres_container_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER_VAL}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_VAL}
      POSTGRES_DB: ${POSTGRES_DB_VAL}
    networks:
      - app-network
    ports:
      - "5433:5433"  # Внешний порт 5433 → внутренний 5433
    command: postgres -p 5433  # Запуск PostgreSQL на порту 5433 внутри контейнера

  flyway:
    image: flyway/flyway
    volumes:
      - ./api/src/main/resources/db/migration:/flyway/sql
    depends_on:
      - postgres_db
    command: [ "migrate" ]
    container_name: flyway
    environment:
      - FLYWAY_URL=${POSTGRES_DB_URL}
      - FLYWAY_USER=${POSTGRES_USER_VAL}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD_VAL}
      - FLYWAY_LOCATIONS=filesystem:/flyway/sql
    networks:
      - app-network

  api:
    image: ${API_IMAGE_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: ${POSTGRES_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER_VAL}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD_VAL}
    networks:
      - app-network
    volumes:
      - ./src/main:/app/src/main
    restart: always
    expose:
      - ${API_PORT}
      - ${API_PORT_DEBUG}
    stdin_open: true
    tty: true
    ports:
      - ${API_PORT}:${API_PORT}
      - ${API_PORT_DEBUG}:${API_PORT_DEBUG}
    container_name: api
    env_file:
      - .env
    depends_on:
      - flyway
      - postgres_db

networks:
  app-network:
    driver: bridge
